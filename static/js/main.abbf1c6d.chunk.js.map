{"version":3,"sources":["../../graphql-ex-yt/client/src/gitCat.png","../../graphql-ex-yt/client/src/queries.js","../../graphql-ex-yt/client/src/components/TopicList.js","../../graphql-ex-yt/client/src/App.js","../../graphql-ex-yt/client/src/index.js"],"names":["module","exports","__webpack_require__","p","GET_RELATED_TOPICS_QUERY","gql","_templateObject","TopicList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","state","topic","_this2","react_default","a","createElement","className","react_apollo_esm","query","variables","name","_ref","loading","error","data","listItems","relatedTopics","map","index","key","onClick","stargazers","totalCount","Component","client","ApolloClient","uri","request","operation","setContext","headers","authorization","concat","process","App","react_body_backgroundcolor_default","backgroundColor","src","gitCat","alt","TopicList_TopicList","render","src_App_0","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+hBCKjC,IAAMC,QAA2BC,GAAHC,KCChBC,cACnB,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAMFI,YAAc,SAAAC,GACZR,EAAKS,SAAS,SAAAC,GAAK,MAAK,CACtBC,MAAOH,MAPTR,EAAKU,MAAQ,CACXC,MAAO,SAHGX,wEAaL,IAAAY,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeb,KAAKO,MAAMC,OACxCE,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAOtB,EACPuB,UAAW,CAAEC,KAAMjB,KAAKO,MAAMC,QAE7B,SAAAU,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,GAAIF,EAAS,OAAOT,EAAAC,EAAAC,cAAA,uBACpB,GAAIQ,EAAO,OAAOV,EAAAC,EAAAC,cAAA,mBAClB,IAAMU,EAAYD,EAAKb,MAAMe,cAAcC,IAAI,SAAChB,EAAOiB,GAAR,OAC7Cf,EAAAC,EAAAC,cAAA,UAAQc,IAAKD,EAAOE,QAAS,SAAAtB,GAAC,OAAII,EAAKL,YAAYI,EAAMS,QACtDT,EAAMS,KAAO,KAAOT,EAAMoB,WAAWC,WADxC,aAIF,OAAOnB,EAAAC,EAAAC,cAAA,UAAKU,aA/BeQ,8BCGjCC,SAAS,IAAIC,IAAa,CAC9BC,IAAK,iCACLC,QAAS,SAAAC,GACPA,EAAUC,WAAW,CACnBC,QAAS,CACPC,cAAa,UAAAC,OACXC,mDA2BKC,mLAlBX,OACE/B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAgBiB,OAAQA,GACtBrB,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CAAqBgC,gBAAgB,WACnCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yFAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS+B,IAAKC,IAAQC,IAAI,SACzCpC,EAAAC,EAAAC,cAACmC,EAAD,gBAZMjB,aClBlBkB,iBAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.abbf1c6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitCat.65a041bc.png\";","import gql from 'graphql-tag';\n\n// <Github API query>\n// Takes in a Topic Name and fetches the first 10 related topics\n// and the total number of stargazers each topic has\nexport const GET_RELATED_TOPICS_QUERY = gql`\n  query getRelatedTopics($name: String!) {\n    topic(name: $name) {\n      relatedTopics(first: 10) {\n        name\n        stargazers {\n          totalCount\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport './TopicList.css';\nimport { GET_RELATED_TOPICS_QUERY } from '../queries';\n\n// Displays a list of\nexport default class TopicList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topic: 'react',\n    };\n  }\n\n  handleClick = e => {\n    this.setState(state => ({\n      topic: e,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"list\">\n        <h2 className=\"center-text\">{this.state.topic}</h2>\n        <p> Related Topics: </p>\n        <Query\n          query={GET_RELATED_TOPICS_QUERY}\n          variables={{ name: this.state.topic }}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>loading...</p>;\n            if (error) return <p>error!</p>;\n            const listItems = data.topic.relatedTopics.map((topic, index) => (\n              <button key={index} onClick={e => this.handleClick(topic.name)}>\n                {topic.name + ': ' + topic.stargazers.totalCount} &#9733;\n              </button>\n            ));\n            return <ul>{listItems}</ul>;\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport BodyBackgroundColor from 'react-body-backgroundcolor';\nimport TopicList from './components/TopicList';\nimport gitCat from './gitCat.png';\nimport './App.css';\n\n// Initialize client's Github API authentication\nconst client = new ApolloClient({\n  uri: 'https://api.github.com/graphql',\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${\n          process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n        }`,\n      },\n    });\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <BodyBackgroundColor backgroundColor=\"#D6EAF8\">\n          <div className=\"App\">\n            <h2> Aspiration Bank Project - by Akash Arora</h2>\n            <h3 className=\"move-down\">\n              This web-app displays Git topics related to one another using the\n              Github GraphQL API.\n            </h3>\n            <img className=\"medium\" src={gitCat} alt=\"logo\" />\n            <TopicList />\n          </div>\n        </BodyBackgroundColor>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}